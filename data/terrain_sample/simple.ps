
uniform sampler2D normal_map;
uniform sampler2D texture;
uniform sampler2D texture2;

#include <remote:mcore/shaders/core.psh>

void main()
{
	vec3 lightdir = FetchVec3(TSLightDir);
	float dist = FetchFloat(EyeDist);

	vec3 normal = FetchNormal();
	vec2 tx = FetchTexCoord();

	float fade = normal.y * normal.y;
	vec3 bumpNor = (texture2D(normal_map, tx ).rgb - 0.5) * 2.0;
	vec3 t1 = 0.5 * ( texture2D(texture, tx ).rgb +  texture2D(texture, tx * 5.0 ).rgb );
	vec3 t2 = 0.5 * ( texture2D(texture2, tx ).rgb +  texture2D(texture2, tx * 5.0 ).rgb );
	
	vec3 fog = vec3(0.5,0.65,0.94);
	// float fogDensity = 1.0 / exp( (dist * 0.0006)  );
	// actually, linear fog looks better in this scene, but keep the fog away from lod0
	float fogDensity = 1.0 - clamp(0.0,1.0, (dist-30.0) / 2000.0);
	
    gl_FragColor.a = 1.0;
	gl_FragColor.rgb = mix( fog, ( mix( t1, t2, fade + 0.2 ) 
	  
		)
		* dot(normalize(lightdir), normalize(bumpNor)),  fogDensity);
}

